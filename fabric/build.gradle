import dex.plugins.outlet.v2.util.ReleaseType

plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'io.github.dexman545.outlet' version '1.6.1'
	id 'com.modrinth.minotaur' version '2.+'
	id 'maven-publish'
}

version = "${rootProject.mod_version}+${project.minecraft_version}"

outlet {
	maintainPropertiesFile = System.getenv("DISABLE_PROPERTIES_UPDATE") == null
	mcVersionRange = rootProject.supported_minecraft_versions
	allowedReleaseTypes = Set.of(ReleaseType.RELEASE)
	propertiesData = [
			'yarn_version': outlet.yarnVersion(project.minecraft_version),
			'loader_version': outlet.loaderVersion()
	]
}


loom {
	runs {
		client {
			runDir "run/client"
		}
		server {
			runDir "run/server"
		}
	}
}

// https://gist.github.com/maityyy/3dbcd558d58a6412c3a2a38c72706e8e
afterEvaluate {
	loom.runs.configureEach {
		vmArg "-javaagent:${project.configurations.compileClasspath.find{ it.name.contains("sponge-mixin") }}"
		if (System.getenv("DISABLE_PROPERTIES_UPDATE") == null) vmArg "-Ddevauth.enabled=true"
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		name = "DevAuth"
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
		content {
			includeGroup "me.djtheredstoner"
		}
	}
}

configurations {
	common {
		canBeResolved = true
		canBeConsumed = false
	}
	api.extendsFrom common
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// DevAuth
	modLocalRuntime "me.djtheredstoner:DevAuth-fabric:${devauth_version}"

	include project(path: ":common", configuration: "shadow")
	common project(":common")

	// Uncomment for including a module of fabric api
	// includeModImplementation fabricApi.module("fabric-api-base", project.fapi_version)
}

processResources {
	final Map properties = Map<String, String>.of(
			"modVersion",                 rootProject.mod_version,
			"supportedMinecraftVersions", rootProject.supported_minecraft_versions
	)

	inputs.properties(properties)

	filesMatching("fabric.mod.json") {
		expand(properties)
	}

	exclude ".cache/**"
}

//modrinth {
//	token = System.getenv("MODRINTH_TOKEN")
//	projectId = "mesh-lib"
//	def customVersionName = System.getenv("VERSION_NAME")
//	if (customVersionName != null) versionName = customVersionName
//	versionNumber = "${project.version}"
//	versionType = "alpha"
//	def isPreRelease = System.getenv("VERSION_IS_PRERELEASE")
//	versionType = !"false".equals(isPreRelease) ? "beta" : "release"
//	uploadFile = remapJar.archiveFile
//	//additionalFiles = [sourcesJar.archiveFile, javadocJar.archiveFile]
//	additionalFiles = [sourcesJar.archiveFile]
//	gameVersions = outlet.mcVersions()
//	syncBodyFrom = rootProject.file("README.md").text
//	def changelogEnv = System.getenv("VERSION_CHANGELOG")
//	if (changelogEnv != null) changelog = changelogEnv
//}
//
//tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
//
//publishing {
//	repositories {
//		maven {
//			name = "OffsetMonkey538"
//			url = "https://maven.offsetmonkey538.top/releases"
//			credentials {
//				username = providers.gradleProperty("OffsetMonkey538Username").getOrElse(System.getenv("MAVEN_USERNAME"))
//				password = providers.gradleProperty("OffsetMonkey538Password").getOrElse(System.getenv("MAVEN_PASSWORD"))
//			}
//			authentication {
//				basic(BasicAuthentication)
//			}
//		}
//	}
//	publications {
//		maven(MavenPublication) {
//			artifactId = "mesh-lib"
//
//			from(components["java"])
//		}
//	}
//}
//